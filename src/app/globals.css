@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;

  /* Brand palette */
  --brand-orange-50: #fff0ea;
  --brand-orange-100: #ffd9cc;
  --brand-orange-200: #ffb399;
  --brand-orange-300: #ff8c66;
  --brand-orange-400: #f56a41;
  --brand-orange-500: #e84a23; /* RETELL Orange - primary brand red */
  --brand-orange-600: #d13f1f; /* hover */
  --brand-orange-700: #b8361b; /* active */
  --brand-orange-800: #9e2c16;
  --brand-orange-900: #7f2412;

  --brand-black: #000000;  /* SCHWARZ */
  --brand-gray: #dbd8d6;   /* GRAU */
  --brand-creme: #f7f1ea;  /* CREME */
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  /* Use Inter everywhere */
  --font-sans: var(--font-inter);
  --font-mono: var(--font-inter);

  /* Expose brand colors as tokens for utility classes if used */
  --color-brand: var(--brand-orange-500);
  --color-brand-50: var(--brand-orange-50);
  --color-brand-100: var(--brand-orange-100);
  --color-brand-200: var(--brand-orange-200);
  --color-brand-300: var(--brand-orange-300);
  --color-brand-400: var(--brand-orange-400);
  --color-brand-500: var(--brand-orange-500);
  --color-brand-600: var(--brand-orange-600);
  --color-brand-700: var(--brand-orange-700);
  --color-brand-800: var(--brand-orange-800);
  --color-brand-900: var(--brand-orange-900);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-inter), ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
}

/* Modern rounded design utilities */
.rounded-modern {
  border-radius: 16px;
}

.rounded-modern-lg {
  border-radius: 24px;
}

.rounded-modern-xl {
  border-radius: 32px;
}



/* Brand utility helpers */
.bg-brand { background-color: var(--brand-orange-500); }
.bg-brand-50 { background-color: var(--brand-orange-50); }
.bg-brand-100 { background-color: var(--brand-orange-100); }
.bg-brand-200 { background-color: var(--brand-orange-200); }
.bg-brand-300 { background-color: var(--brand-orange-300); }
.bg-brand-400 { background-color: var(--brand-orange-400); }
.bg-brand-500 { background-color: var(--brand-orange-500); }
.bg-brand-600 { background-color: var(--brand-orange-600); }
.bg-brand-700 { background-color: var(--brand-orange-700); }
.bg-brand-800 { background-color: var(--brand-orange-800); }
.bg-brand-900 { background-color: var(--brand-orange-900); }
.text-brand { color: var(--brand-orange-600); }
.border-brand-200 { border-color: var(--brand-orange-200); }
.border-brand-300 { border-color: var(--brand-orange-300); }

/* Map existing red Tailwind classes to the brand orange to affect the whole app without touching components */
.bg-red-50 { background-color: var(--brand-orange-50) !important; }
.bg-red-100 { background-color: var(--brand-orange-100) !important; }
.bg-red-200 { background-color: var(--brand-orange-200) !important; }
.bg-red-300 { background-color: var(--brand-orange-300) !important; }
.bg-red-400 { background-color: var(--brand-orange-400) !important; }
.bg-red-500 { background-color: var(--brand-orange-500) !important; }
.bg-red-600 { background-color: var(--brand-orange-600) !important; }
.bg-red-700 { background-color: var(--brand-orange-700) !important; }
.bg-red-800 { background-color: var(--brand-orange-800) !important; }
.text-red-50 { color: var(--brand-orange-50) !important; }
.text-red-100 { color: var(--brand-orange-100) !important; }
.text-red-200 { color: var(--brand-orange-200) !important; }
.text-red-300 { color: var(--brand-orange-300) !important; }
.text-red-400 { color: var(--brand-orange-400) !important; }
.text-red-500 { color: var(--brand-orange-500) !important; }
.text-red-600 { color: var(--brand-orange-600) !important; }
.text-red-700 { color: var(--brand-orange-700) !important; }
.text-red-800 { color: var(--brand-orange-800) !important; }
.text-red-900 { color: var(--brand-orange-900) !important; }
.border-red-200 { border-color: var(--brand-orange-200) !important; }
.border-red-300 { border-color: var(--brand-orange-300) !important; }
.border-red-400 { border-color: var(--brand-orange-400) !important; }
.border-red-500 { border-color: var(--brand-orange-500) !important; }
.border-red-600 { border-color: var(--brand-orange-600) !important; }
.border-red-700 { border-color: var(--brand-orange-700) !important; }
.border-red-800 { border-color: var(--brand-orange-800) !important; }
/* Pseudo-state variants */
.hover\:bg-red-50:hover { background-color: var(--brand-orange-50) !important; }
.hover\:bg-red-100:hover { background-color: var(--brand-orange-100) !important; }
.hover\:bg-red-200:hover { background-color: var(--brand-orange-200) !important; }
.hover\:bg-red-600:hover { background-color: var(--brand-orange-600) !important; }
.hover\:bg-red-700:hover { background-color: var(--brand-orange-700) !important; }
.active\:bg-red-800:active { background-color: var(--brand-orange-800) !important; }
.hover\:text-red-700:hover { color: var(--brand-orange-700) !important; }
.active\:text-red-800:active { color: var(--brand-orange-800) !important; }

/* Disable gradients globally â€“ enforce solid colors only */
[class*="bg-gradient-to-"] { background-image: none !important; background-color: var(--brand-orange-500) !important; }
.from-red-400 { --tw-gradient-from: var(--brand-orange-400) !important; }
.from-red-500 { --tw-gradient-from: var(--brand-orange-500) !important; }
.to-red-600 { --tw-gradient-to: var(--brand-orange-600) !important; }
.to-red-700 { --tw-gradient-to: var(--brand-orange-700) !important; }
.via-red-500 { --tw-gradient-via: var(--brand-orange-500) !important; }
.via-red-600 { --tw-gradient-via: var(--brand-orange-600) !important; }

/* Ring color mapping */
.ring-red-500 { --tw-ring-color: var(--brand-orange-500) !important; }
.focus\:ring-red-500:focus { --tw-ring-color: var(--brand-orange-500) !important; }

/* group-hover gradient helpers */
.group:hover .group-hover\:from-red-500 { --tw-gradient-from: var(--brand-orange-500) !important; }
.group:hover .group-hover\:via-red-600 { --tw-gradient-via: var(--brand-orange-600) !important; }
.group:hover .group-hover\:to-red-700 { --tw-gradient-to: var(--brand-orange-700) !important; }

/* Force input fields to always have black text - Override Tailwind */
input,
textarea,
select,
input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
input[type="tel"],
input[type="url"] {
  color: #000000 !important;
  -webkit-text-fill-color: #000000 !important;
}

/* Override Tailwind text color classes specifically */
.text-gray-400,
.text-gray-500,
.text-gray-600,
.text-gray-700,
.placeholder-gray-400 {
  color: #111827 !important; /* gray-900 for better contrast */
}

/* Override any nested gray text classes */
* .text-gray-400,
* .text-gray-500,
* .text-gray-600 {
  color: #374151 !important; /* gray-700 for better readability */
}

/* Ensure placeholder text is visible but not too dark */
input::placeholder,
textarea::placeholder {
  color: #9ca3af !important;
  opacity: 1;
}

/* Ensure focus states maintain black text */
input:focus,
textarea:focus,
select:focus,
input:focus-visible,
textarea:focus-visible,
select:focus-visible {
  color: #000000 !important;
  -webkit-text-fill-color: #000000 !important;
}

/* Ensure autofill text is black */
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
textarea:-webkit-autofill:active,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus,
select:-webkit-autofill:active {
  -webkit-text-fill-color: #000000 !important;
  color: #000000 !important;
}

/* Override any inherited text colors */
input,
textarea,
select {
  color: #000000 !important;
}

/* Force black text in all states */
input:not(:placeholder-shown),
textarea:not(:placeholder-shown),
select:not(:placeholder-shown) {
  color: #000000 !important;
}

/* Override any light gray text in buttons - but respect color variants */
button .text-gray-400,
button .text-gray-500,
button .text-gray-600 {
  color: #111827 !important; /* gray-900 */
}

/* Ensure button text has proper contrast - but only for buttons without explicit text colors */
button:not([class*="text-white"]):not([class*="text-blue"]):not([class*="text-red"]):not([class*="text-green"]):not([class*="bg-red"]):not([class*="bg-blue"]):not([class*="bg-green"]):not([class*="bg-yellow"]) {
  color: #111827 !important; /* gray-900 */
}

/* Force white text on red/colored buttons with maximum specificity - but NOT outline buttons */
button.bg-red-600:not([class*="border"]),
button.bg-red-500:not([class*="border"]),
button.bg-red-700:not([class*="border"]),
button.bg-red-800:not([class*="border"]),
button[class*="bg-red"]:not([class*="border"]):not([class*="outline"]),
button[class*="bg-blue"]:not([class*="border"]):not([class*="outline"]), 
button[class*="bg-green"]:not([class*="border"]):not([class*="outline"]),
button[class*="bg-yellow"]:not([class*="border"]):not([class*="outline"]) {
  color: white !important;
  -webkit-text-fill-color: white !important;
}

/* Additional specificity for our solid button component variants */
button.inline-flex.bg-red-600:not([class*="border"]),
button.inline-flex.bg-red-500:not([class*="border"]),
button.inline-flex.bg-red-700:not([class*="border"]) {
  color: white !important;
  -webkit-text-fill-color: white !important;
}

/* Specific fix for destructive button variant with maximum specificity */
button.inline-flex.bg-red-500.text-white,
button.inline-flex.bg-red-600.text-white,
button.inline-flex.bg-red-700.text-white,
button[class*="bg-gradient-to-r"][class*="from-red-500"],
button[class*="bg-gradient-to-r"][class*="from-red-500"][class*="text-white"],
button[class*="bg-gradient-to-r"][class*="to-red-600"][class*="text-white"] {
  color: white !important;
  -webkit-text-fill-color: white !important;
}

/* Ensure outline buttons keep their intended text colors */
button[class*="border"].text-red-600,
button[class*="outline"].text-red-600 {
  color: #dc2626 !important; /* red-600 */
  -webkit-text-fill-color: #dc2626 !important;
}

/* Specific overrides for button variants */
button[class*="outline"] {
  /* color: #111827 !important; */
}

button[class*="ghost"] {
  /* color: #111827 !important; */
}

button[class*="secondary"] {
  /* color: #111827 !important; */
}

/* Fix pagination and other navigation buttons */
nav button,
.pagination button {
  color: #111827 !important; /* gray-900 */
}

/* Ensure all interactive elements have proper text color */
a:not([class*="text-white"]):not([class*="text-blue"]):not([class*="text-red"]):not([class*="text-green"]) {
  color: #111827 !important; /* gray-900 */
}

/* Comprehensive gray text fixes */
.text-gray-300,
.text-gray-400,
.text-gray-500,
.text-gray-600 {
  color: #374151 !important; /* gray-700 - readable but not too dark */
}

/* Special case for very light gray text that should be darker */
span[class*="text-gray-"],
div[class*="text-gray-"],
p[class*="text-gray-"] {
  color: #4b5563 !important; /* gray-600 - ensure readability */
}



/* Sticky layout utilities */
.sticky-sidebar {
  position: sticky;
  top: 2rem;
  max-height: calc(100vh - 4rem);
  overflow-y: auto;
}

/* Card hover effects */
.card-hover {
  @apply transition-all duration-300 hover:shadow-xl hover:-translate-y-1;
}

/* Consistent card heights */
.card-equal-height {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.card-equal-height .card-content {
  flex: 1;
}

/* Replace custom gradient helpers with solid colors */
.bg-gradient-warm { background: var(--brand-orange-500) !important; }
.bg-gradient-warm-light { background: var(--brand-orange-50) !important; }
.bg-gradient-warm-dark { background: var(--brand-orange-500) !important; }
